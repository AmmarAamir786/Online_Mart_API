version: '3.8'
name: ammar-mart

services:

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    volumes:
      - ./product-service:/code  # Sync local development directory with the container
    depends_on:
      - kafka-ui
      - broker
    ports:
      - "8000:8000"  # Expose container port 8000 to host port 8000 

  product-consumer-service:
    build:
      context: ./product-consumer-service
      dockerfile: Dockerfile
    volumes:
      - ./product-consumer-service:/code  # Sync local development directory with the container
    depends_on:
      - product_db
      - broker
    ports:
      - "8001:8000"  # Expose container port 8000 to host port 8000 

  product_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: Product_db_Cont
    environment:
        - POSTGRES_USER=ammar
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=product_db
    ports:
        - '5433:5432'
    volumes:
        - product_db:/var/lib/postgresql/data

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

  # product_consumer_db:
  #   image: postgres:latest  # Use the official PostgreSQL image
  #   restart: always
  #   container_name: product_Consumer_db_Cont
  #   environment:
  #       - POSTGRES_USER=ammar
  #       - POSTGRES_PASSWORD=my_password
  #       - POSTGRES_DB=product_consumer_db
  #   ports:
  #       - '5434:5432'
  #   volumes:
  #       - product_consumer_db:/var/lib/postgresql/data

  # user-service:
  #   build:
  #     context: ./user-service
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./user-service:/code  # Sync local development directory with the container
  #   depends_on:
  #       - user_db
  #       - broker
  #   ports:
  #     - "8001:8000"  # Expose container port 8000 to host port 8000  

  # user_db:
  #   image: postgres:latest  # Use the official PostgreSQL image
  #   restart: always
  #   container_name: User_db_Cont
  #   environment:
  #       - POSTGRES_USER=ammar
  #       - POSTGRES_PASSWORD=my_password
  #       - POSTGRES_DB=user_db
  #   ports:
  #       - '5434:5432'
  #   volumes:
  #       - user_db:/var/lib/postgresql/data

volumes:
  product_db:
    driver: local
  # user_db:
  #   driver: local
  # product_consumer_db:
  #   driver: local

networks:
  default:
    driver: bridge
